;; -*- Emacs-Lisp -*-
;; color-theme-darkmate.el --- The darkmate color theme for emacs.

;; Copyright (C) 2009, 2010, 2011 Dylan.Wen

;; Author: Dylan.Wen <dylan.wen.dw@gmail.com>
;; Time-stamp: <2011-09-03 11:40>

;; This file is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This file is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this file.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:
;;
;; The darkmate color theme for emacs is a color scheme samiliar with the
;; darkmate color theme of gEdit. It depends on the color-theme.el
;; which is in the color-theme package for Emacs.

;;; Installation:
;;
;; Add the following to your .emacs file (requires the color-theme package):
;;
;; (require 'color-theme)
;; (color-theme-initialize)
;; (load-file "path/color-theme-darkmate.el")
;;
;; and then evaluate (color-theme-darkmate) to activate it.

;;; Code:


(eval-when-compile (require 'color-theme))


(defun color-theme-darkmate ()
  "A color theme inspired by the darkmate color theme of gEdit,
which is inspired by the default color theme of TextMate.
Created by Dylan.Wen <dylan.wen.dw@gmail.com>, 2009-02-09."
  (interactive)
  ;;
  ;; Brief colors used in this theme:
  ;; white
  ;; (color-white "#eeeeee")
  ;; gray -> dark
  ;; (color-gray "#bbbbbb")
  ;; (color-asfalto "#555753")
  ;; (color-carbon "#232323")
  ;; green -> deep
  ;; (color-senape "#acc900")
  ;; (color-lime "#96ff00")
  ;; (color-green "#00c900")
  ;; green -> blue
  ;; (color-alga "#00c99b")
  ;; (color-aque "#00d8ff")
  ;; (color-cyan "#009cff")
  ;; purple
  ;; (color-violet "#9e91ff")
  ;; (color-purple "#bb66ff")
  ;; pink -> deep red
  ;; (color-magenta "#ff79d9")
  ;; (color-fuschsia "#ff44cc")
  ;; (color-red "#ff2f6a")
  ;; yellow
  ;; (color-yellow "#fce94f")
  ;; orange -> deep
  ;; (color-ambra "#ff9900")
  ;; (color-orange "#ff6100")
  ;;
  (color-theme-install
   '(color-theme-darkmate
     ((background-color . "#232323")
      (background-mode . dark)
      (border-color . "black")
      (cursor-color . "#eeeeee")
      (foreground-color . "#eeeeee")
      (mouse-color . "sienna1"))
     ((ac-fuzzy-cursor-color . "red")
      (ecb-analyse-bucket-element-face . ecb-analyse-bucket-element-face)
      (ecb-analyse-bucket-node-face . ecb-analyse-bucket-node-face)
      (ecb-analyse-face . ecb-default-highlight-face)
      (ecb-analyse-general-face . ecb-default-general-face)
      (ecb-directories-general-face . ecb-default-general-face)
      (ecb-directory-face . ecb-default-highlight-face)
      (ecb-directory-not-accessible-face . ecb-directory-not-accessible-face)
      (ecb-history-bucket-node-face . ecb-history-bucket-node-face)
      (ecb-history-dead-buffer-face . ecb-history-dead-buffer-face)
      (ecb-history-face . ecb-history-face)
      (ecb-history-general-face . ecb-default-general-face)
      (ecb-history-indirect-buffer-face . ecb-history-indirect-buffer-face)
      (ecb-method-face . ecb-default-highlight-face)
      (ecb-method-non-semantic-face . speedbar-tag-face)
      (ecb-methods-general-face . ecb-default-general-face)
      (ecb-mode-line-data-face . ecb-mode-line-data-face)
      (ecb-mode-line-prefix-face . ecb-mode-line-prefix-face)
      (ecb-mode-line-win-nr-face . ecb-mode-line-win-nr-face)
      (ecb-source-face . ecb-default-highlight-face)
      (ecb-source-in-directories-buffer-face . ecb-source-in-directories-buffer-face)
      (ecb-source-read-only-face . ecb-source-read-only-face)
      (ecb-sources-general-face . ecb-default-general-face)
      (ecb-tag-header-face . ecb-tag-header-face)
      (ecb-tree-guide-line-face . ecb-tree-guide-line-face)
      (ibuffer-deletion-face . font-lock-warning-face)
      (ibuffer-filter-group-name-face . bold)
      (ibuffer-marked-face . font-lock-type-face)
      (ibuffer-title-face . font-lock-comment-face)
      (ispell-highlight-face . flyspell-incorrect)
      (list-matching-lines-buffer-name-face . underline)
      (list-matching-lines-face . match)
      (term-default-bg-color . "#232323")
      (term-default-fg-color . "#eeeeee")
      (todoo-item-assigned-header-face . todoo-item-assigned-header-face)
      (todoo-item-header-face . todoo-item-header-face)
      (todoo-sub-item-header-face . todoo-sub-item-header-face)
      (view-highlight-face . highlight)
      (widget-mouse-face . highlight))
     (default
       ((t (:background "#232323" :foreground "#eeeeee"
                        :family "Vera Sans YuanTi Mono"
                        :height 115 :width normal :weight normal :slant normal
                        :box nil  :inverse-video nil :strike-through nil
                        :overline nil :underline nil :stipple nil
                        :foundry "unknown"))))
     (Term-default-fg-inv ((t (nil))))
     (ac-candidate-face
      ((((class color) (min-colors 88))
        (:background "lightgray" :foreground "black"))
       (((class color) (min-colors 16))
        (:background "lightgray" :foreground "black"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black"))
       (((type tty) (class mono))
        (:background "white" :foreground "black"))
       (t (:background "lightgray" :foreground "black"))))
     (ac-completion-face
      ((((class color) (min-colors 88))
        (:background "darkgray" :underline t))
       (((class color) (min-colors 16))
        (:background "darkgray" :underline t))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black"))
       (((type tty) (class mono))
        (:background "white" :foreground "black"))
       (t (:foreground "darkgray" :underline t))))
     (ac-gtags-candidate-face
      ((((class color) (min-colors 88))
        (:background "lightgray" :foreground "navy"))
       (((class color) (min-colors 16))
        (:background "lightgray" :foreground "navy"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "green"))
       (((type tty) (class mono))
        (:background "white" :foreground "green"))
       (t (:background "lightgray" :foreground "navy"))))
     (ac-gtags-selection-face
      ((((class color) (min-colors 88))
        (:background "navy" :foreground "white" :weight bold))
       (((class color) (min-colors 16))
        (:background "navy" :foreground "white" :weight bold))
       (((class color) (min-colors 8))
        (:background "green" :foreground "white" :weight bold))
       (((type tty) (class mono))
        (:background "green" :foreground "white" :weight bold))
       (t (:background "navy" :foreground "white" :weight bold))))
     (ac-selection-face
      ((((class color) (min-colors 88))
        (:background "steelblue" :foreground "white" :weight bold))
       (((class color) (min-colors 16))
        (:background "steelblue" :foreground "white" :weight bold))
       (((class color) (min-colors 8))
        (:background "cyan" :foreground "white" :weight bold))
       (((type tty) (class mono))
        (:background "cyan" :foreground "white" :weight bold))
       (t (:background "steelblue" :foreground "white" :weight bold))))
     (ac-yasnippet-candidate-face
      ((((class color) (min-colors 88))
        (:background "sandybrown" :foreground "black"))
       (((class color) (min-colors 16))
        (:background "sandybrown" :foreground "black"))
       (((class color) (min-colors 8))
        (:background "yellow" :foreground "black"))
       (((type tty) (class mono))
        (:background "yellow" :foreground "black"))
       (t (:background "sandybrown" :foreground "black"))))
     (ac-yasnippet-selection-face
      ((((class color) (min-colors 88))
        (:background "coral3" :foreground "white" :weight bold))
       (((class color) (min-colors 16))
        (:background "coral3" :foreground "white" :weight bold))
       (((class color) (min-colors 8))
        (:background "purple" :foreground "white" :weight bold))
       (((type tty) (class mono))
        (:background "purple" :foreground "white" :weight bold))
       (t (:background "coral3" :foreground "white" :weight bold))))
     (bg:erc-color-face0 ((t (:background "White"))))
     (bg:erc-color-face1 ((t (:background "black"))))
     (bg:erc-color-face10 ((t (:background "lightblue1"))))
     (bg:erc-color-face11 ((t (:background "cyan"))))
     (bg:erc-color-face12 ((t (:background "blue"))))
     (bg:erc-color-face13 ((t (:background "deeppink"))))
     (bg:erc-color-face14 ((t (:background "gray50"))))
     (bg:erc-color-face15 ((t (:background "gray90"))))
     (bg:erc-color-face2 ((t (:background "blue4"))))
     (bg:erc-color-face3 ((t (:background "green4"))))
     (bg:erc-color-face4 ((t (:background "red"))))
     (bg:erc-color-face5 ((t (:background "brown"))))
     (bg:erc-color-face6 ((t (:background "purple"))))
     (bg:erc-color-face7 ((t (:background "orange"))))
     (bg:erc-color-face8 ((t (:background "yellow"))))
     (bg:erc-color-face9 ((t (:background "green"))))
     (blue ((t (:foreground "blue"))))
     (bold ((t (:weight bold))))
     (bold-italic ((t (:slant italic :weight bold))))
     (border ((t (:background "black"))))
     (border-glyph ((t (nil))))
     (buffer-menu-buffer ((t (:weight bold))))
     (buffers-tab ((t (:background "#0C1021" :foreground "#F8F8F8"))))
     (button ((t (:underline t))))
     (c-nonbreakable-space-face ((t (:background "#ff2f6a" :weight bold))))
     (cal-china-x-general-holiday-face ((t (:background "green"))))
     (cal-china-x-important-holiday-face ((t (:background "red"))))
     (calendar-today
      ((((class color) (min-colors 88))
        (:background "black" :foreground "#ff9900" :underline t))
       (((class color) (min-colors 16))
        (:background "black" :foreground "#ff9900" :underline t))
       (((class color) (min-colors 8))
        (:background "white" :foreground "yellow"))
       (((type tty) (class mono))
        (:background "white" :foreground "yellow"))
       (t (:background "black" :foreground "#ff9900"))))
     (comint-highlight-input ((t (:weight bold))))
     (comint-highlight-prompt ((t (:foreground "cyan1"))))
     (completions-annotations ((t (:slant italic))))
     (completions-common-part ((t (:inherit default))))
     (completions-first-difference ((t (:weight bold))))
     (cursor
      ((((class color) (min-colors 88))
        (:background "#eeeeee"))
       (((class color) (min-colors 16))
        (:background "#eeeeee"))
       (((class color) (min-colors 8))
        (:background "blue"))
       (((type tty) (class mono))
        (:background "blue"))
       (t (:background "#eeeeee"))))
     (diary ((t (:foreground "yellow1"))))
     (dired-directory
      ((((class color) (min-colors 88))
        (:foreground "#9e91ff" :weight bold))
       (((class color) (min-colors 16))
        (:foreground "#9e91ff" :weight bold))
       (((class color) (min-colors 8))
        (:foreground "blue" :weight bold))
       (((type tty) (class mono))
        (:foreground "blue" :weight bold))
       (t (:foreground "#9e91ff"))))
     (dired-flagged ((t (:weight bold :foreground "Pink"))))
     (dired-header
      ((((class color) (min-colors 88))
        (:foreground "#bb66ff" :slant italic :weight bold))
       (((class color) (min-colors 16))
        (:foreground "purple" :slant italic :weight bold))
       (((class color) (min-colors 8))
        (:foreground "purple" :slant italic :weight bold))
       (((type tty) (class mono))
        (:foreground "purple" :slant italic :weight bold))
       (t (:foreground "#bb66ff" :weight bold))))
     (dired-ignored
      ((((class color) (min-colors 88)) (:foreground "grey70"))
       (((class color) (min-colors 16)) (:foreground "grey70"))
       (((class color) (min-colors 8)) (:foreground "white"))
       (((type tty) (class mono)) (:foreground "white"))
       (t (:foreground "grey70"))))
     (dired-mark
      ((((class color) (min-colors 88)) (:foreground "#009cff"))
       (((class color) (min-colors 16)) (:foreground "cyan"))
       (((class color) (min-colors 8)) (:foreground "cyan"))
       (((type tty) (class mono)) (:foreground "cyan"))
       (t (:foreground "#009cff"))))
     (dired-marked
      ((((class color) (min-colors 88)) (:foreground "#009cff" :weight bold))
       (((class color) (min-colors 16)) (:foreground "cyan" :weight bold))
       (((class color) (min-colors 8)) (:foreground "cyan" :weight bold))
       (((type tty) (class mono)) (:foreground "cyan" :weight bold))
       (t (:foreground "#009cff" :weight bold))))
     (dired-perm-write ((t (:foreground "#bb66ff" :slant italic))))
     (dired-symlink
      ((((class color) (min-colors 88)) (:foreground "#bb66ff"))
       (((class color) (min-colors 16)) (:foreground "#bb66ff"))
       (((class color) (min-colors 8)) (:foreground "purple"))
       (((type tty) (class mono)) (:foreground "purple"))
       (t (:foreground "#bb66ff"))))
     (dired-warning
      ((((class color) (min-colors 88)) (:foreground "#ff2f6a" :weight bold))
       (((class color) (min-colors 16)) (:foreground "red" :weight bold))
       (((class color) (min-colors 8)) (:foreground "red" :weight bold))
       (((type tty) (class mono)) (:foreground "red" :weight bold))
       (t (:foreground "#ff2f6a" :weight bold))))
     (dropdown-list-face
      ((t (:inherit default :background "lightyellow" :foreground "red"))))
     (dropdown-list-selection-face
      ((t (:inherit default :foreground "black" :background "purple"))))
     (ecb-analyse-bucket-element-face ((t (:height 1.0))))
     (ecb-analyse-bucket-node-face ((t (:weight bold :height 1.0))))
     (ecb-analyse-face ((t (:background "#555753"))))
     (ecb-analyse-general-face ((t (:height 1.0))))
     (ecb-bucket-node-face ((t (:weight bold :height 1.0))))
     (ecb-default-general-face ((t (:height 1.0))))
     (ecb-default-highlight-face ((t (:background "#555753"))))
     (ecb-directories-general-face ((t (:height 1.0))))
     (ecb-directory-face ((t (:background "#555753"))))
     (ecb-directory-not-accessible-face
      ((t (:foreground "gray60" :height 1.0))))
     (ecb-history-bucket-node-face ((t (:weight bold :height 1.0))))
     (ecb-history-dead-buffer-face ((t (:foreground "gray60" :height 1.0))))
     (ecb-history-face ((t (:background "#555753"))))
     (ecb-history-general-face ((t (:height 1.0))))
     (ecb-history-indirect-buffer-face ((t (:slant italic :height 1.0))))
     (ecb-method-face ((t (:background "#555753"))))
     (ecb-method-non-semantic-face ((t (:foreground "brown" :height 1.0))))
     (ecb-methods-general-face ((t (:height 1.0))))
     (ecb-mode-line-data-face ((t (nil))))
     (ecb-mode-line-prefix-face ((t (:foreground "forestgreen"))))
     (ecb-mode-line-win-nr-face ((t (:weight bold))))
     (ecb-source-face ((t (:background "#555753"))))
     (ecb-source-in-directories-buffer-face
      ((t (:foreground "lightblue1" :height 1.0))))
     (ecb-source-read-only-face ((t (:slant italic :height 1.0))))
     (ecb-sources-general-face ((t (:height 1.0))))
     (ecb-tag-header-face ((t (:background "gray40"))))
     (ecb-tree-guide-line-face ((t (:foreground "gray" :height 1.0))))
     (ecb-type-tag-class-face ((t (:weight bold))))
     (ecb-type-tag-enum-face ((t (:weight bold))))
     (ecb-type-tag-group-face ((t (:foreground "dim gray" :weight bold))))
     (ecb-type-tag-interface-face ((t (:weight bold))))
     (ecb-type-tag-struct-face ((t (:weight bold))))
     (ecb-type-tag-typedef-face ((t (:weight bold))))
     (ecb-type-tag-union-face ((t (:weight bold))))
     (eieio-custom-slot-tag-face ((t (:foreground "light blue"))))
     (eldoc-highlight-function-argument ((t (:weight bold))))
     (emms-playlist-selected-face ((t (:foreground "SteelBlue3"))))
     (emms-playlist-track-face ((t (:foreground "DarkSeaGreen"))))
     (erc-action-face ((t (:weight semi-bold))))
     (erc-bold-face ((t (:weight bold))))
     (erc-current-nick-face
      ((t (:foreground "LightSeaGreen" :weight semi-bold))))
     (erc-dangerous-host-face ((t (:foreground "#ff2f6a"))))
     (erc-default-face ((t (nil))))
     (erc-direct-msg-face ((t (:foreground "#ff44cc"))))
     (erc-error-face
      ((t (:background "darkblue" :foreground "#ff2f6a" :weight semi-bold))))
     (erc-fool-face ((t (:foreground "dim gray"))))
     (erc-input-face ((t (:foreground "#009cff"))))
     (erc-inverse-face
      ((t (:background "Darkgreen" :foreground "Black" :weight semi-bold))))
     (erc-keyword-face ((t (:foreground "#ff9900" :weight bold))))
     (erc-nick-default-face ((t (:weight semi-bold))))
     (erc-nick-msg-face ((t (:foreground "#ff6100" :weight semi-bold))))
     (erc-notice-face ((t (:foreground "#bb66ff" :weight normal))))
     (erc-pal-face ((t (:foreground "MediumAquaMarine" :weight bold))))
     (erc-prompt-face
      ((t (:background "black" :foreground "#ff9900" :weight semi-bold))))
     (erc-timestamp-face ((t (:foreground "#96ff00" :weight normal))))
     (erc-underline-face ((t (:underline t))))
     (escape-glyph ((t (:foreground "cyan"))))
     (fg:erc-color-face0 ((t (:foreground "White"))))
     (fg:erc-color-face1 ((t (:foreground "black"))))
     (fg:erc-color-face10 ((t (:foreground "lightblue1"))))
     (fg:erc-color-face11 ((t (:foreground "cyan"))))
     (fg:erc-color-face12 ((t (:foreground "blue"))))
     (fg:erc-color-face13 ((t (:foreground "deeppink"))))
     (fg:erc-color-face14 ((t (:foreground "gray50"))))
     (fg:erc-color-face15 ((t (:foreground "gray90"))))
     (fg:erc-color-face2 ((t (:foreground "blue4"))))
     (fg:erc-color-face3 ((t (:foreground "green4"))))
     (fg:erc-color-face4 ((t (:foreground "red"))))
     (fg:erc-color-face5 ((t (:foreground "brown"))))
     (fg:erc-color-face6 ((t (:foreground "purple"))))
     (fg:erc-color-face7 ((t (:foreground "orange"))))
     (fg:erc-color-face8 ((t (:foreground "yellow"))))
     (fg:erc-color-face9 ((t (:foreground "green"))))
     (file-name-shadow ((t (:foreground "grey70"))))
     (fixed-pitch ((t (:family "Monospace"))))
     (flyspell-duplicate ((t (:foreground "#fcaf3e" :underline t))))
     (flyspell-incorrect ((t (:foreground "#cc0000" :strike-through t))))
     (font-lock-builtin-face
      ((((class color) (min-colors 88)) (:foreground "#fce94f"))
       (((class color) (min-colors 16)) (:foreground "yellow"))
       (((class color) (min-colors 8)) (:foreground "yellow"))
       (((type tty) (class mono)) (:foreground "yellow"))
       (t (:foreground "#fce94f"))))
     (font-lock-comment-delimiter-face
      ((((class color) (min-colors 88)) (:foreground "#bb66ff" :slant italic))
       (((class color) (min-colors 16)) (:foreground "purple" :slant italic))
       (((class color) (min-colors 8)) (:foreground "purple" :slant italic))
       (((type tty) (class mono)) (:foreground "purple" :slant italic))
       ((t (:foreground "#bb66ff" :slant italic)))))
     (font-lock-comment-face
      ((((class color) (min-colors 88))
        (:foreground "#bb66ff" :slant italic :weight bold))
       (((class color) (min-colors 16))
        (:foreground "purple" :slant italic :weight bold))
       (((class color) (min-colors 8))
        (:foreground "purple" :slant italic :weight bold))
       (((type tty) (class mono))
        (:foreground "purple" :slant italic :weight bold))
       (t (:foreground "#bb66ff" :slant italic :weight bold))))
     (font-lock-constant-face
      ((((class color) (min-colors 88)) (:foreground "#fce94f"))
       (((class color) (min-colors 16)) (:foreground "yellow"))
       (((class color) (min-colors 8)) (:foreground "yellow"))
       (((type tty) (class mono)) (:foreground "yellow"))
       (t (:foreground "#fce94f"))))
     (font-lock-doc-face
      ((((class color) (min-colors 88)) (:foreground "#96ff00"))
       (((class color) (min-colors 16)) (:foreground "limegreen"))
       (((class color) (min-colors 8)) (:foreground "green"))
       (((type tty) (class mono)) (:foreground "green"))
       (t (:foreground "#96ff00"))))
     (font-lock-doc-string-face
      ((((class color) (min-colors 88)) (:foreground "DarkOrange"))
       (((class color) (min-colors 16)) (:foreground "orange"))
       (((class color) (min-colors 8)) (:foreground "yellow"))
       (((type tty) (class mono)) (:foreground "yellow"))
       (t (:foreground "DarkOrange"))))
     (font-lock-function-name-face
      ((((class color) (min-colors 88)) (:foreground "#9e91ff" :weight book))
       (((class color) (min-colors 16)) (:foreground "blueviolet" :weight book))
       (((class color) (min-colors 8)) (:foreground "blue" :weight book))
       (((type tty) (class mono)) (:foreground "blue" :weight book))
       (t (:foreground "#9e91ff" :weight book))))
     (font-lock-keyword-face
      ((((class color) (min-colors 88)) (:foreground "#ff9900" :weight bold))
       (((class color) (min-colors 16)) (:foreground "orange" :weight bold))
       (((class color) (min-colors 8)) (:foreground "yellow" :weight bold))
       (((type tty) (class mono)) (:foreground "yellow" :weight bold))
       (t (:foreground "#ff9900" :weight bold))))
     (font-lock-negation-char-face ((t (nil))))
     (font-lock-preprocessor-face
      ((((class color) (min-colors 88)) (:foreground "#00d8ff" :weight bold))
       (((class color) (min-colors 16)) (:foreground "aquamarine" :weight bold))
       (((class color) (min-colors 8)) (:foreground "cyan" :weight bold))
       (((type tty) (class mono)) (:foreground "cyan" :weight bold))
       (t (:foreground "#00d8ff" :weight bold))))
     (font-lock-reference-face ((t (:foreground "SlateBlue"))))
     (font-lock-regexp-grouping-backslash
      ((((class color) (min-colors 88)) (:foreground "#bbbbbb"))
       (((class color) (min-colors 16)) (:foreground "red"))
       (((class color) (min-colors 8)) (:foreground "red"))
       (((type tty) (class mono)) (:foreground "red"))
       (t (:foreground "#bbbbbb"))))
     (font-lock-regexp-grouping-construct
      ((((class color) (min-colors 88)) (:foreground "#ff44cc"))
       (((class color) (min-colors 16)) (:foreground "red"))
       (((class color) (min-colors 8)) (:foreground "red"))
       (((type tty) (class mono)) (:foreground "red"))
       (t (:foreground "#ff44cc"))))
     (font-lock-string-face
      ((((class color) (min-colors 88)) (:foreground "#96ff00"))
       (((class color) (min-colors 16)) (:foreground "limegreen"))
       (((class color) (min-colors 8)) (:foreground "green"))
       (((type tty) (class mono)) (:foreground "green"))
       (t (:foreground "#96ff00"))))
     (font-lock-type-face
      ((((class color) (min-colors 88)) (:foreground "#009cff"))
       (((class color) (min-colors 16)) (:foreground "cyan"))
       (((class color) (min-colors 8)) (:foreground "cyan"))
       (((type tty) (class mono)) (:foreground "cyan"))
       (t (:foreground "#009cff"))))
     (font-lock-variable-name-face
      ((((class color) (min-colors 88)) (:foreground "#00c900"))
       (((class color) (min-colors 16)) (:foreground "green3"))
       (((class color) (min-colors 8)) (:foreground "green"))
       (((type tty) (class mono)) (:foreground "green"))
       (t (:foreground "#00c900"))))
     (font-lock-warning-face
      ((((class color) (min-colors 88)) (:foreground "#ff2f6a" :weight bold))
       (((class color) (min-colors 16)) (:foreground "red" :weight bold))
       (((class color) (min-colors 8)) (:foreground "red" :weight bold))
       (((type tty) (class mono)) (:foreground "red" :weight bold))
       (t (:foreground "#ff2f6a" :weight bold))))
     (fringe ((t (:background "grey10"))))
     (header-line
      ((t (:weight semi-bold :box (:line-width -1 :color "#606060")
                   :background "grey20" :foreground "grey90" :box nil))))
     (help-argument-name
      ((t (:blod t :foreground "green" :slant italic :weight bold))))
     (hi-black-b ((t (:weight bold))))
     (hi-black-hb ((t (:family "Sans Serif" :weight bold :height 1.67))))
     (hi-blue ((t (:background "light blue" :foreground "black"))))
     (hi-blue-b ((t (:foreground "blue1" :weight bold))))
     (hi-green ((t (:background "green1" :foreground "black"))))
     (hi-green-b ((t (:foreground "green1" :weight bold))))
     (hi-pink ((t (:background "pink" :foreground "black"))))
     (hi-red-b ((t (:foreground "red" :weight bold))))
     (hi-yellow ((t (:background "yellow1" :foreground "black"))))
     (hide-ifdef-shadow
      ((((class color) (min-colors 88)) (:foreground "grey70"))
       (((class color) (min-colors 16)) (:foreground "grey70"))
       (((class color) (min-colors 8)) (nil))
       (((type tty) (class mono)) (nil))
       (t (:foreground "grey70"))))
     (highlight
      ((((class color) (min-colors 88)) (:background "#222222"))
       (((class color) (min-colors 16)) (:background "#222222"))
       (((class color) (min-colors 8)) (:inverse-video t))
       (((type tty) (class mono)) (:inverse-video t))
       (t (:background "#222222"))))
     (highlight-current-line-face
      ((((class color) (min-colors 88)) (:background "black"))
       (((class color) (min-colors 16)) (:background "black"))
       (((class color) (min-colors 8)) (nil))
       (((type tty) (class mono)) (nil))
       (t (:background "black"))))
     (highlight-symbol-face
      ((((class color) (min-colors 88))
        (:background "gray30"))
       (((class color) (min-colors 16))
        (:background "gray30"))
       (((class color) (min-colors 8))
        (:background "purple" :foreground "black"))
       (((type tty) (class mono))
        (:background "purple" :foreground "black"))
       (t (:background "gray30"))))
     (highline-face
      ((((class color) (min-colors 88))
        (:background "SeaGreen"))
       (((class color) (min-colors 16))
        (:background "SeaGreen"))
       (((class color) (min-colors 8))
        (:background "cyan" :foreground "black"))
       (((type tty) (class mono))
        (:background "cyan" :foreground "black"))
       (t (:background "SeaGreen"))))
     (holiday
      ((((class color) (min-colors 88))
        (:background "gray30" :foreground "#acc900" :slant italic))
       (((class color) (min-colors 16))
        (:background "gray30" :foreground "#acc900" :slant italic))
       (((class color) (min-colors 8))
        (:background "white" :foreground "green" :slant italic))
       (((type tty) (class mono))
        (:background "white" :foreground "green" :slant italic))
       (t (:background "gray30" :foreground "#acc900" :slant italic))))
     (ido-first-match ((t (:weight bold))))
     (ido-incomplete-regexp ((t (:foreground "Pink" :weight bold))))
     (ido-indicator
      ((t (:background "red" :foreground "yellow1" :width condensed))))
     (ido-only-match
      ((((class color) (min-colors 88)) (:foreground "#00c900"))
       (((class color) (min-colors 16)) (:foreground "#00c900"))
       (((class color) (min-colors 8)) (:foreground "green"))
       (((type tty) (class mono)) (:foreground "green"))
       (t (:foreground "#00c900"))))
     (ido-subdir
      ((((class color) (min-colors 88))
        (:foreground "#9e91ff" :weight bold))
       (((class color) (min-colors 16))
        (:foreground "#9e91ff" :weight bold))
       (((class color) (min-colors 8))
        (:foreground "blue" :weight bold))
       (((type tty) (class mono))
        (:foreground "blue" :weight bold))
       (t (:foreground "#9e91ff" :weight bold))))
     (isearch
      ((((class color) (min-colors 88))
        (:background "#fce94f" :foreground "#232323"))
       (((class color) (min-colors 16))
        (:background "#fce94f" :foreground "#232323"))
       (((class color) (min-colors 8))
        (:background "yellow" :foreground "black"))
       (((type tty) (class mono))
        (:background "yellow" :foreground "black"))
       (t (:background "#fce94f" :foreground "#232323"))))
     (isearch-fail
      ((((class color) (min-colors 88))
        (:background "#ff2f6a" :foreground "yellowgreen" :weight bold))
       (((class color) (min-colors 16))
        (:background "#ff2f6a" :foreground "yellowgreen" :weight bold))
       (((class color) (min-colors 8))
        (:background "red" :foreground "yellow" :weight bold))
       (((type tty) (class mono))
        (:background "red" :foreground "yellow" :weight bold))
       (t (:background "#ff2f6a" :foreground "yellowgreen" :weight bold))))
     (italic ((t (:slant italic))))
     (lazy-highlight ((t (:background "paleturquoise4"))))
     (left-margin ((t (nil))))
     (link
      ((((class color) (min-colors 88))
        (:foreground "#06989A" :underline t :weight bold))
       (((class color) (min-colors 16))
        (:foreground "#06989A" :underline t :weight bold))
       (((class color) (min-colors 8))
        (:foreground "blue" :underline t :weight bold))
       (((type tty) (class mono))
        (:foreground "blue" :underline t :weight bold))
       (t (:foreground "#06989A" :underline t :weight bold))))
     (link-visited
      ((((class color) (min-colors 88))
        (:foreground "violet" :underline t :slant italic))
       (((class color) (min-colors 16))
        (:foreground "violet" :underline t :slant italic))
       (((class color) (min-colors 8))
        (:foreground "purple" :underline t :slant italic))
       (((type tty) (class mono))
        (:foreground "purple" :underline t :slant italic))
       (t (:foreground "violet" :underline t :slant italic))))
     (linum
      ((((class color) (min-colors 88))
        (:background "#bbbbbb" :foreground "#555753"))
       (((class color) (min-colors 16))
        (:background "#bbbbbb" :foreground "#555753"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black"))
       (((type tty) (class mono))
        (:background "white" :foreground "black"))
       (t (:background "#bbbbbb" :foreground "#555753"))))
     (makefile-makepp-perl ((t (:background "DarkBlue"))))
     (makefile-shell
      ((((class color) (min-colors 88))
        (:foreground "wheat" :weight book))
       (((class color) (min-colors 16))
        (:foreground "wheat" :weight book))
       (((class color) (min-colors 8))
        (:foreground "yellow"))
       (((type tty) (class mono))
        (:foreground "yellow"))
       (t (:foreground "wheat" :weight book))))
     (makefile-space ((t (:background "#ff79d9"))))
     (makefile-targets ((t (:foreground "#009cff" :weight semi-bold))))
     (match
      ((((class color) (min-colors 88))
        (:background "RoyalBlue3" :foreground "#232323" :weight bold))
       (((class color) (min-colors 16))
        (:background "RoyalBlue3" :foreground "#232323" :weight bold))
       (((class color) (min-colors 8))
        (:foreground "blue" :foreground "black" :weight bold))
       (((type tty) (class mono))
        (:foreground "blue" :foreground "black" :weight bold))
       (t (:background "RoyalBlue3" :foreground "#232323" :weight bold))))
     (menu ((t (nil))))
     (minibuffer-prompt
      ((((class color) (min-colors 88))
        (:foreground "#fce94f" :weight semi-bold))
       (((class color) (min-colors 16))
        (:foreground "#fce94f" :weight semi-bold))
       (((class color) (min-colors 8)) (:foreground "yellow" :weight bold))
       (((type tty) (class mono)) (:foreground "yellow" :weight bold))
       (t (:foreground "#fce94f" :weight semi-bold))))
     (mode-line
      ((((class color) (min-colors 88))
        (:background "gray10" :foreground "gray60"
                     :box (:line-width -1 :color "gray50")
                     :weight semi-bold))
       (((class color) (min-colors 16))
        (:background "gray10" :foreground "gray60" :weight semi-bold))
       (((class color) (min-colors 8))
        (:background "purple" :foreground "white"))
       (((type tty) (class mono)) (:background "purple" :foreground "white"))
       (t (:background "gray10" :foreground "gray60"
                       :box (:line-width -1 :color "gray50")
                       :weight semi-bold))))
     (mode-line-buffer-id
      ((((class color) (min-colors 88))
        (:background "gray30" :foreground "#009cff" :weight bold))
       (((class color) (min-colors 16))
        (:background "gray30" :foreground "#009cff" :weight bold))
       (((class color) (min-colors 8))
        (:background "black" :foreground "blue" :weight bold))
       (((type tty) (class mono))
        (:background "black" :foreground "blue" :weight bold))
       (t (:background "gray30" :foreground "#009cff" :weight bold))))
     (mode-line-emphasis ((t (:weight bold))))
     (mode-line-highlight ((t (:background "#bb66ff"))))
     (mode-line-inactive
      ((((class color) (min-colors 88))
        (:background "gray20" :foreground "gray70"
                     :box (:line-width -1 :color "gray40")))
       (((class color) (min-colors 16))
        (:background "gray20" :foreground "gray70"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black"))
       (((type tty) (class mono)) (:background "white" :foreground "black"))
       (t (:background "gray20" :foreground "gray70"
                       :box (:line-width -1 :color "gray40")))))
     (modeline-mousable ((t (:background "gray10" :foreground "white"))))
     (modeline-mousable-minor-mode
      ((t (:background "gray10" :foreground "white"))))
     (mouse ((t (:background "sienna1"))))
     (next-error ((t (:background "#555753"))))
     (nobreak-space ((t (:foreground "cyan" :underline t))))
     (outline-1 ((t (:foreground "#9e91ff"))))
     (outline-2 ((t (:foreground "#FF6400"))))
     (outline-3 ((t (:foreground "#ff9900" :weight bold))))
     (outline-4 ((t (:foreground "#bb66ff" :slant italic))))
     (outline-5 ((t (:foreground "#8DA6CE"))))
     (outline-6 ((t (:foreground "#fce94f"))))
     (outline-7 ((t (:foreground "cyan"))))
     (outline-8 ((t (:foreground "#96ff00"))))
     (popup-face ((t (:background "lightgray" :foreground "black"))))
     (popup-isearch-match ((t (:background "sky blue"))))
     (popup-menu-face ((t (:background "lightgray" :foreground "black"))))
     (popup-menu-selection-face
      ((t (:background "steelblue" :foreground "white"))))
     (popup-scroll-bar-background-face ((t (:background "gray"))))
     (popup-scroll-bar-foreground-face ((t (:background "black"))))
     (popup-tip-face ((t (:background "khaki1" :foreground "black"))))
     (pp^L-highlight ((t (:box (:line-width 3 :style pressed-button)))))
     (pulse-highlight-face ((t (:background "#AAAA33"))))
     (pulse-highlight-start-face ((t (:background "#AAAA33"))))
     (query-replace
      ((((class color) (min-colors 88))
        (:background "palevioletred2" :foreground "brown4"))
       (((class color) (min-colors 16))
        (:background "palevioletred2" :foreground "brown4"))
       (((class color) (min-colors 8))
        (:background "red" :foreground "black"))
       (((type tty) (class mono))
        (:background "red" :foreground "black"))
       (t (:background "palevioletred2" :foreground "brown4"))))
     (region
      ((((class color) (min-colors 88)) (:background "#555753"))
       (((class color) (min-colors 16)) (:background "blue3"))
       (((class color) (min-colors 8)) (:background "blue" :foreground "white"))
       (((type tty) (class mono)) (:inverse-video t))
       (t (:background "#555753"))))
     (region-invert
      ((((class color) (min-colors 88)) (:foreground "#555753"))
       (((class color) (min-colors 16)) (:foreground "blue3"))
       (((class color) (min-colors 8)) (:foreground "blue"))
       (((type tty) (class mono)) (:inverse-video t))
       (t (:foreground "#555753"))))
     (scroll-bar ((t (nil))))
     (secondary-selection ((t (:background "#bbbbbb" :foreground "#eeeeee"))))
     (semantic-decoration-on-includes ((t (nil))))
     (semantic-decoration-on-private-members-face
      ((t (:background "#200000"))))
     (semantic-decoration-on-protected-members-face
      ((t (:background "#000020"))))
     (semantic-decoration-on-unknown-includes ((t (:background "#900000"))))
     (semantic-decoration-on-unparsed-includes ((t (:background "#555500"))))
     (semantic-highlight-edits-face
      ((((class color) (min-colors 88)) (:background "gray20"))
       (((class color) (min-colors 16)) (:background "gray20"))
       (((class color) (min-colors 8)) (nil))
       (((type tty) (class mono)) (nil))
       (t (:background "gray20"))))
     (semantic-highlight-func-current-tag-face
      ((((class color) (min-colors 88)) (:background "gray20"))
       (((class color) (min-colors 16)) (:background "gray20"))
       (((class color) (min-colors 8)) (:inverse-video t))
       (((type tty) (class mono)) (:inverse-video t))
       (t (:background "gray20"))))
     (semantic-tag-boundary-face ((t (:overline "cyan"))))
     (semantic-unmatched-syntax-face ((t (nil))))
     (senator-intangible-face ((t (:foreground "gray75"))))
     (senator-momentary-highlight-face ((t (:background "gray30"))))
     (senator-read-only-face ((t (:background "#664444"))))
     (setnu-line-number-face
      ((t (:background "Grey15" :foreground "#555753" :weight bold))))
     (shadow
      ((((class color) (min-colors 88)) (:foreground "grey70"))
       (((class color) (min-colors 16)) (:foreground "grey70"))
       (((class color) (min-colors 8)) (nil))
       (((type tty) (class mono)) (nil))
       (t (:foreground "grey70"))))
     (show-paren-match
      ((((class color) (min-colors 88))
        (:background "#bb66ff" :foreground "#eeeeee" :weight bold))
       (((class color) (min-colors 16))
        (:background "#bb66ff" :foreground "#eeeeee" :weight bold))
       (((class color) (min-colors 8))
        (:background "purple" :foreground "white" :weight bold))
       (((type tty) (class mono))
        (:background "purple" :foreground "white" :weight bold))
       (t (:background "#bb66ff" :foreground "#eeeeee" :weight bold))))
     (show-paren-mismatch
      ((((class color) (min-colors 88))
        (:background "#ff2f6a" :foreground "#232323" :weight bold))
       (((class color) (min-colors 16))
        (:background "#ff2f6a" :foreground "#eeeeee" :weight bold))
       (((class color) (min-colors 8))
        (:background "red" :foreground "white" :weight bold))
       (((type tty) (class mono))
        (:background "red" :foreground "white" :weight bold))
       (t (:background "#ff2f6a" :foreground "#232323" :weight bold))))
     (speedbar-button-face ((t (:foreground "green3"))))
     (speedbar-directory-face ((t (:foreground "light blue"))))
     (speedbar-file-face ((t (:foreground "cyan"))))
     (speedbar-highlight-face ((t (:background "sea green"))))
     (speedbar-selected-face ((t (:foreground "red" :underline t))))
     (speedbar-separator-face
      ((t (:background "blue" :foreground "white" :overline "gray"))))
     (speedbar-tag-face ((t (:foreground "yellow"))))
     (srecode-separator-face ((t (:strike-through t :weight bold))))
     (tabbar-button
      ((((class color) (min-colors 88))
        (:inherit tabbar-default
                  :foreground "dark red"
                  :box (:line-width 1 :color "gray30")))
       (((class color) (min-colors 16))
        (:inherit tabbar-default
                  :foreground "dark red"
                  :box (:line-width 1 :color "gray30")))
       (((class color) (min-colors 8))
        (:inherit tabbar-default :foreground "red"))
       (((type tty) (class mono))
        (:inherit tabbar-default :foreground "red"))
       (t (:inherit tabbar-default
                    :foreground "dark red"
                    :box (:line-width 1 :color "gray30")))))
     (tabbar-button-highlight
      ((t (:inherit tabbar-default))))
     (tabbar-default
      ((((class color) (min-colors 88))
        (:background "gray80" :foreground "gray30" :height 0.9 :weight normal))
       (((class color) (min-colors 16))
        (:background "gray80" :foreground "gray30" :weight normal))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black" :weight normal))
       (((type tty) (class mono))
        (:background "white" :foreground "black" :weight normal))
       (t (:background "gray80" :foreground "gray30"
                       :height 0.9 :weight normal))))
     (tabbar-highlight
      ((t (:underline t))))
     (tabbar-selected
      ((((class color) (min-colors 88))
        (:inherit tabbar-default
                  :background "LightGoldenrod" :foreground "DarkGreen"
                  :box (:line-width 2 :color "DarkGoldenrod")
                  :weight bold))
       (((class color) (min-colors 16))
        (:inherit tabbar-default
                  :background "LightGoldenrod" :foreground "DarkGreen"
                  :weight bold))
       (((class color) (min-colors 8))
        (:inherit tabbar-default
                  :background "black" :foreground "green"))
       (((type tty) (class mono))
        (:inherit tabbar-default
                  :background "black" :foreground "green"))
       (t (:inherit tabbar-default
                    :background "LightGoldenrod" :foreground "DarkGreen"
                    :box (:line-width 2 :color "DarkGoldenrod")
                    :weight bold))))
     (tabbar-separator
      ((((class color) (min-colors 88))
        (:inherit tabbar-default :height 0.1))
       (((class color) (min-colors 16))
        (:inherit tabbar-default :height 0.1))
       (((class color) (min-colors 8))
        (:inherit tabbar-default :foreground "black"))
       (((type tty) (class mono))
        (:inherit tabbar-default :foreground "black"))
       (t (:inherit tabbar-default :height 0.1))))
     (tabbar-unselected
      ((((class color) (min-colors 88))
        (:inherit tabbar-default :box (:line-width 2 :color "gray70")))
       (((class color) (min-colors 16))
        (:inherit tabbar-default :box (:line-width 2 :color "gray70")))
       (((class color) (min-colors 8))
        (:inherit tabbar-default :foreground "black"))
       (((type tty) (class mono))
        (:inherit tabbar-default :foreground "black"))
       (t (:inherit tabbar-default :box (:line-width 2 :color "gray70")))))
     (template-message-face ((t (:weight bold))))
     (term-black ((t (:foreground "black"))))
     (term-blackbg ((t (nil))))
     (term-blue ((t (:foreground "blue"))))
     (term-blue-bold-face ((t (:foreground "blue" :weight bold))))
     (term-blue-face ((t (:foreground "blue"))))
     (term-blue-inv-face ((t (:background "blue"))))
     (term-blue-ul-face ((t (:foreground "blue" :underline t))))
     (term-bluebg ((t (:background "blue"))))
     (term-bold ((t (:weight bold))))
     (term-cyan ((t (:foreground "cyan"))))
     (term-cyan-bold-face ((t (:foreground "cyan" :weight bold))))
     (term-cyan-face ((t (:foreground "cyan"))))
     (term-cyan-inv-face ((t (:background "cyan"))))
     (term-cyan-ul-face ((t (:foreground "cyan" :underline t))))
     (term-cyanbg ((t (:background "cyan"))))
     (term-default-bg ((t (:background "#232323"))))
     (term-default-bg-inv ((t (nil))))
     (term-default-bold-face ((t (:weight bold))))
     (term-default-face ((t (nil))))
     (term-default-fg ((t (:foreground "#eeeeee"))))
     (term-default-inv-face ((t (:background "peachpuff" :foreground "black"))))
     (term-default-ul-face ((t (:underline t))))
     (term-green ((t (:foreground "green"))))
     (term-green-bold-face ((t (:foreground "green" :weight bold))))
     (term-green-face ((t (:foreground "green"))))
     (term-green-inv-face ((t (:background "green"))))
     (term-green-ul-face ((t (:foreground "green" :underline t))))
     (term-greenbg ((t (:background "green"))))
     (term-invisible ((t (nil))))
     (term-invisible-inv ((t (nil))))
     (term-magenta ((t (:foreground "magenta"))))
     (term-magenta-bold-face ((t (:foreground "magenta" :weight bold))))
     (term-magenta-face ((t (:foreground "magenta"))))
     (term-magenta-inv-face ((t (:background "magenta"))))
     (term-magenta-ul-face ((t (:foreground "magenta" :underline t))))
     (term-magentabg ((t (:background "magenta"))))
     (term-red ((t (:foreground "red"))))
     (term-red-bold-face ((t (:foreground "red" :weight bold))))
     (term-red-face ((t (:foreground "red"))))
     (term-red-inv-face ((t (:background "red"))))
     (term-red-ul-face ((t (:foreground "red" :underline t))))
     (term-redbg ((t (:background "red"))))
     (term-underline ((t (:underline t))))
     (term-white ((t (:foreground "white"))))
     (term-white-bold-face ((t (:foreground "white" :weight bold))))
     (term-white-face ((t (:foreground "white"))))
     (term-white-inv-face ((t (nil))))
     (term-white-ul-face ((t (:foreground "white" :underline t))))
     (term-whitebg ((t (:background "white"))))
     (term-yellow ((t (:foreground "yellow"))))
     (term-yellow-bold-face ((t (:foreground "yellow" :weight bold))))
     (term-yellow-face ((t (:foreground "yellow"))))
     (term-yellow-inv-face ((t (:background "yellow"))))
     (term-yellow-ul-face ((t (:foreground "yellow" :underline t))))
     (term-yellowbg ((t (:background "yellow"))))
     (text-cursor ((t (:background "yellow" :foreground "black"))))
     (todoo-item-assigned-header-face ((t (:foreground "red" :weight bold))))
     (todoo-item-header-face ((t (:foreground "goldenrod" :weight bold))))
     (todoo-sub-item-header-face ((t (:foreground "darkgoldenrod"))))
     (tool-bar ((t (nil))))
     (tooltip
      ((t
        (:background "lightyellow" :foreground "black" :family "Sans Serif"))))
     (trailing-whitespace
      ((((class color) (min-colors 88))
        (:background "white"))
       (((class color) (min-colors 16))
        (:background "white"))
       (((class color) (min-colors 8))
        (:background "white"))
       (((type tty) (class mono))
        (:background "white"))
       (t (:background "white"))))
     (underline ((t (:underline t))))
     (variable-pitch ((t (:family "Sans Serif"))))
     (vertical-border ((t (nil))))
     (which-func
      ((((class color) (min-colors 88))
        (:background "#232323" :foreground "#9e91ff" :weight book))
       (((class color) (min-colors 16))
        (:background "#232323" :foreground "#9e91ff" :weight book))
       (((class color) (min-colors 8))
        (:background "white" :foreground "blue" :weight book))
       (((type tty) (class mono))
        (:background "white" :foreground "blue" :weight book))
       (t (:background "#232323" :foreground "#9e91ff" :weight book))))
     (whitespace-empty ((t (:background "gray22" :foreground "#ff79d9"))))
     (whitespace-hspace ((t (:background "gray22" :foreground "#ff79d9"))))
     (whitespace-indentation
      ((((class color) (min-colors 88))
        (:background "gray40" :foreground "#ff79d9"))
       (((class color) (min-colors 16))
        (:background "gray40" :foreground "#ff79d9"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "red"))
       (((type tty) (class mono))
        (:background "white" :foreground "red"))
       (t (:background "gray40" :foreground "#ff79d9"))))
     (whitespace-line ((t (:background "gray22" :foreground "violet"))))
     (whitespace-newline ((t (:foreground "darkgray" :weight normal))))
     (whitespace-space ((t (:background "gray22" :foreground "#ff79d9"))))
     (whitespace-space-after-tab
      ((t (:background "gray22" :foreground "#ff79d9"))))
     (whitespace-space-before-tab
      ((t (:background "DarkOrange" :foreground "#ff79d9"))))
     (whitespace-tab
      ((((class color) (min-colors 88))
        (:background "gray30" :foreground "#ff79d9"))
       (((class color) (min-colors 16))
        (:background "gray30" :foreground "#ff79d9"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "red"))
       (((type tty) (class mono))
        (:background "white" :foreground "red"))
       (t (:background "gray30" :foreground "#ff79d9"))))
     (whitespace-trailing
      ((((class color) (min-colors 88))
        (:background "red"))
       (((class color) (min-colors 16))
        (:background "red"))
       (((class color) (min-colors 8))
        (:background "white"))
       (((type tty) (class mono))
        (:background "white"))
       (t (:background "red"))))
     (widget-button ((t (:weight bold))))
     (widget-button-pressed ((t (:foreground "red"))))
     (widget-documentation ((t (:foreground "limegreen"))))
     (widget-field ((t (:background "dim gray"))))
     (widget-inactive ((t (:foreground "grey70"))))
     (widget-single-line-field ((t (:background "dim gray"))))
     (yas/field-debug-face ((t (nil))))
     (yas/field-highlight-face
      ((((class color) (min-colors 88))
        (:background "DimGrey"))
       (((class color) (min-colors 16))
        (:background "DimGrey"))
       (((class color) (min-colors 8))
        (:background "white" :foreground "black"))
       (((type tty) (class mono))
        (:background "white" :foreground "black"))
       (t (:background "DimGrey"))))
     (zmacs-region ((t (:background "snow" :foreground "blue")))))))


(add-to-list 'color-themes
             '(color-theme-darkmate
               "Darkmate"
               "Dylan.Wen <dylan.wen.dw@gmail.com>"))


(provide 'color-theme-darkmate)
